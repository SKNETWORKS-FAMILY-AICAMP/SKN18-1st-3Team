# import streamlit as st
# import pandas as pd

# home_button = st.page_link(
#     page="./app.py",
#     label = "Home",
#     icon="🏠"
#     )

# st.set_page_config(
#     page_title="지역별 인구-자동차 상관계수",
#     layout="centered",
#     initial_sidebar_state="auto"
# )

# # ─── 데이터 로딩 (예시로 직접 입력) ───
# # 실제 사용 시 CSV 파일로 저장하고 pd.read_csv("파일명.csv")로 불러올 수 있음
# data = [
#     ['2021년',	'강원',	'남성',	0.5699,	0.181598,	7],
#     ['2021년',	'강원',	'여성',	0.5965,	0.211356,	6],
#     ['2021년',	'경기',	'남성',	0.3482,	0.444048,	7],
#     ['2021년',	'경기',	'여성',	0.2839,	0.585533,	6],
#     ['2021년',	'경남',	'남성',	0.4531,	0.307202,	7],
#     ['2021년',	'경남',	'여성',	0.4585,	0.360389,	6],
#     ['2021년',	'경북',	'남성',	0.6098,	0.146011,	7],
#     ['2021년',	'경북',	'여성',	0.6014,	0.206615,	6],
#     ['2021년',	'광주',	'남성',	0.2057,	0.658210,	7],
#     ['2021년',	'광주',	'여성',	0.1615,	0.759865,	6],
#     ['2021년',	'대구',	'남성',	0.3734,	0.409401,	7],
#     ['2021년',	'대구',	'여성',	0.5178,	0.292688,	6],
#     ['2021년',	'대전',	'남성',	0.1750,	0.707459,	7],
#     ['2021년',	'대전',	'여성',	0.2407,	0.645958,	6],
#     ['2021년',	'부산',	'남성',	0.5174,	0.234366,	7],
#     ['2021년',	'부산',	'여성',	0.6553,	0.157771,	6],
#     ['2021년',	'서울',	'남성',	0.3495,	0.442237,	7],
#     ['2021년',	'서울',	'여성',	0.4347,	0.389022,	6],
#     ['2021년',	'세종',	'남성',	0.1780,	0.702610,	7],
#     ['2021년',	'세종',	'여성',	0.0039,	0.994142,	6],
#     ['2021년',	'울산',	'남성',	0.4005,	0.373246,	7],
#     ['2021년',	'울산',	'여성',	0.4407,	0.381726,	6],
#     ['2021년',	'인천',	'남성',	0.4300,	0.335535,	7],
#     ['2021년',	'인천',	'여성',	0.4494,	0.371253,	6],
#     ['2021년',	'전남',	'남성',	0.5999,	0.154428,	7],
#     ['2021년',	'전남',	'여성',	0.4431,	0.378892,	6],
#     ['2021년',	'전북',	'남성',	0.4345,	0.329927,	7],
#     ['2021년',	'전북',	'여성',	0.3995,	0.432667,	6],
#     ['2021년',	'제주',	'남성',	0.2684,	0.560546,	7],
#     ['2021년',	'제주',	'여성',	0.1675,	0.751152,	6],
#     ['2021년',	'충남',	'남성',	0.3648,	0.421055,	7],
#     ['2021년',	'충남',	'여성',	0.2490,	0.634198,	6],
#     ['2021년',	'충북',	'남성',	0.3869,	0.391247,	7],
#     ['2021년',	'충북',	'여성',	0.4282,	0.396940,	6],
#     ['2022년',	'강원',	'남성',	0.6055,	0.149647,	7],
#     ['2022년',	'강원',	'여성',	0.5937,	0.159879,	7],
#     ['2022년',	'경기',	'남성',	0.3733,	0.409517,	7],
#     ['2022년',	'경기',	'여성',	0.4144,	0.355283,	7],
#     ['2022년',	'경남',	'남성',	0.4855,	0.269367,	7],
#     ['2022년',	'경남',	'여성',	0.5121,	0.240019,	7],
#     ['2022년',	'경북',	'남성',	0.6356,	0.125002,	7],
#     ['2022년',	'경북',	'여성',	0.5924,	0.161071,	7],
#     ['2022년',	'광주',	'남성',	0.2281,	0.622815,	7],
#     ['2022년',	'광주',	'여성',	0.2955,	0.519920,	7],
#     ['2022년',	'대구',	'남성',	0.3988,	0.375529,	7],
#     ['2022년',	'대구',	'여성',	0.5633,	0.187940,	7],
#     ['2022년',	'대전',	'남성',	0.1944,	0.676186,	7],
#     ['2022년',	'대전',	'여성',	0.3352,	0.462422,	7],
#     ['2022년',	'부산',	'남성',	0.5513,	0.199582,	7],
#     ['2022년',	'부산',	'여성',	0.8528,	0.014726,	7],
#     ['2022년',	'서울',	'남성',	0.4107,	0.360040,	7],
#     ['2022년',	'서울',	'여성',	0.5414,	0.209401,	7],
#     ['2022년',	'세종',	'남성',	0.2062,	0.657325,	7],
#     ['2022년',	'세종',	'여성',	0.2592,	0.574542,	7],
#     ['2022년',	'울산',	'남성',	0.4205,	0.347548,	7],
#     ['2022년',	'울산',	'여성',	0.4955,	0.258180,	7],
#     ['2022년',	'인천',	'남성',	0.4641,	0.294199,	7],
#     ['2022년',	'인천',	'여성',	0.5350,	0.215985,	7],
#     ['2022년',	'전남',	'남성',	0.6236,	0.134528,	7],
#     ['2022년',	'전남',	'여성',	0.4523,	0.308163,	7],
#     ['2022년',	'전북',	'남성',	0.4786,	0.277238,	7],
#     ['2022년',	'전북',	'여성',	0.4426,	0.319951,	7],
#     ['2022년',	'제주',	'남성',	0.3049,	0.506128,	7],
#     ['2022년',	'제주',	'여성',	0.3067,	0.503522,	7],
#     ['2022년',	'충남',	'남성',	0.4074,	0.364298,	7],
#     ['2022년',	'충남',	'여성',	0.3407,	0.454610,	7],
#     ['2022년',	'충북',	'남성',	0.4315,	0.333700,	7],
#     ['2022년',	'충북',	'여성',	0.4570,	0.302625,	7],
#     ['2023년',	'강원',	'남성',	0.6165,	0.140406,	7],
#     ['2023년',	'강원',	'여성',	0.5735,	0.178293,	7],
#     ['2023년',	'경기',	'남성',	0.4024,	0.370794,	7],
#     ['2023년',	'경기',	'여성',	0.4361,	0.327965,	7],
#     ['2023년',	'경남',	'남성',	0.5076,	0.244842,	7],
#     ['2023년',	'경남',	'여성',	0.5038,	0.249045,	7],
#     ['2023년',	'경북',	'남성',	0.6358,	0.124805,	7],
#     ['2023년',	'경북',	'여성',	0.5619,	0.189238,	7],
#     ['2023년',	'광주',	'남성',	0.2428,	0.599865,	7],
#     ['2023년',	'광주',	'여성',	0.2988,	0.515064,	7],
#     ['2023년',	'대구',	'남성',	0.4399,	0.323293,	7],
#     ['2023년',	'대구',	'여성',	0.5692,	0.182302,	7],
#     ['2023년',	'대전',	'남성',	0.2118,	0.648413,	7],
#     ['2023년',	'대전',	'여성',	0.3376,	0.459010,	7],
#     ['2023년',	'부산',	'남성',	0.5690,	0.182499,	7],
#     ['2023년',	'부산',	'여성',	0.8046,	0.029105,	7],
#     ['2023년',	'서울',	'남성',	0.4826,	0.272676,	7],
#     ['2023년',	'서울',	'여성',	0.5992,	0.155053,	7],
#     ['2023년',	'세종',	'남성',	0.2285,	0.622203,	7],
#     ['2023년',	'세종',	'여성',	0.2759,	0.549257,	7],
#     ['2023년',	'울산',	'남성',	0.4400,	0.323165,	7],
#     ['2023년',	'울산',	'여성',	0.4865,	0.268282,	7],
#     ['2023년',	'인천',	'남성',	0.5077,	0.244737,	7],
#     ['2023년',	'인천',	'여성',	0.5652,	0.186134,	7],
#     ['2023년',	'전남',	'남성',	0.6393,	0.122158,	7],
#     ['2023년',	'전남',	'여성',	0.4410,	0.321904,	7],
#     ['2023년',	'전북',	'남성',	0.5008,	0.252252,	7],
#     ['2023년',	'전북',	'여성',	0.4330,	0.331794,	7],
#     ['2023년',	'제주',	'남성',	0.3341,	0.463982,	7],
#     ['2023년',	'제주',	'여성',	0.3306,	0.468932,	7],
#     ['2023년',	'충남',	'남성',	0.4455,	0.316461,	7],
#     ['2023년',	'충남',	'여성',	0.3572,	0.431558,	7],
#     ['2023년',	'충북',	'남성',	0.4555,	0.304387,	7],
#     ['2023년',	'충북',	'여성',	0.4527,	0.307782,	7]
# ]
# columns = ['연도', '지역', '성별', '상관계수 r', 'p-value', '샘플 수']
# df = pd.DataFrame(data, columns=columns)

# # ─── Streamlit UI ───
# st.title("📊 지역별 인구-자동차 등록 상관계수")

# st.markdown("""
# ## 필터링 조건
# 연도, 지역, 성별을 선택해 상관계수를 확인하세요.
# """)

# # ─── 필터 선택 ───
# years = df['연도'].unique()
# genders = df['성별'].unique()
# regions = df['지역'].unique()

# selected_years = st.multiselect("연도 선택", options=years, default=list(years))
# selected_genders = st.multiselect("성별 선택", options=genders, default=list(genders))
# selected_regions = st.multiselect("지역 선택", options=regions, default=list(regions))

# # ─── 필터링 적용 ───
# filtered_df = df[
#     df['연도'].isin(selected_years) &
#     df['성별'].isin(selected_genders) &
#     df['지역'].isin(selected_regions)
# ].reset_index(drop=True)

# # ─── 결과 테이블 ───
# st.subheader("📋 필터링된 데이터")
# st.dataframe(filtered_df)

# # ─── 시각화 ───
# st.subheader("📈 상관계수 시각화 (지역별)")
# if not filtered_df.empty:
#     st.bar_chart(filtered_df.set_index('지역')['상관계수 r'])
# else:
#     st.warning("선택한 조건에 맞는 데이터가 없습니다.")

import streamlit as st
import pandas as pd

st.set_page_config(
    page_title="지역별 인구-자동차 상관계수",
    layout="centered",
    initial_sidebar_state="auto"
)

home_button = st.page_link(
    page="./Main_Page.py",
    label="Home",
    icon="🏠"
)

# ─────────────────────────────────────────────
# 🎯 제목 상자
st.markdown("""
<div style="background-color: #1f77b4; padding: 15px; border-radius: 10px;">
    <h2 style="color: white; text-align: center;">📊 지역별 성별-자동차 등록 상관계수</h2>
</div>
""", unsafe_allow_html=True)

st.markdown("<div style='height: 20px'></div>", unsafe_allow_html=True)

# ─────────────────────────────────────────────
# 📁 데이터 로딩 (직접 정의)
data = [
    ['2021년',	'강원',	'남성',	0.5699,	0.181598,	7],
    ['2021년',	'강원',	'여성',	0.5965,	0.211356,	6],
    ['2021년',	'경기',	'남성',	0.3482,	0.444048,	7],
    ['2021년',	'경기',	'여성',	0.2839,	0.585533,	6],
    ['2021년',	'경남',	'남성',	0.4531,	0.307202,	7],
    ['2021년',	'경남',	'여성',	0.4585,	0.360389,	6],
    ['2021년',	'경북',	'남성',	0.6098,	0.146011,	7],
    ['2021년',	'경북',	'여성',	0.6014,	0.206615,	6],
    ['2021년',	'광주',	'남성',	0.2057,	0.658210,	7],
    ['2021년',	'광주',	'여성',	0.1615,	0.759865,	6],
    ['2021년',	'대구',	'남성',	0.3734,	0.409401,	7],
    ['2021년',	'대구',	'여성',	0.5178,	0.292688,	6],
    ['2021년',	'대전',	'남성',	0.1750,	0.707459,	7],
    ['2021년',	'대전',	'여성',	0.2407,	0.645958,	6],
    ['2021년',	'부산',	'남성',	0.5174,	0.234366,	7],
    ['2021년',	'부산',	'여성',	0.6553,	0.157771,	6],
    ['2021년',	'서울',	'남성',	0.3495,	0.442237,	7],
    ['2021년',	'서울',	'여성',	0.4347,	0.389022,	6],
    ['2021년',	'세종',	'남성',	0.1780,	0.702610,	7],
    ['2021년',	'세종',	'여성',	0.0039,	0.994142,	6],
    ['2021년',	'울산',	'남성',	0.4005,	0.373246,	7],
    ['2021년',	'울산',	'여성',	0.4407,	0.381726,	6],
    ['2021년',	'인천',	'남성',	0.4300,	0.335535,	7],
    ['2021년',	'인천',	'여성',	0.4494,	0.371253,	6],
    ['2021년',	'전남',	'남성',	0.5999,	0.154428,	7],
    ['2021년',	'전남',	'여성',	0.4431,	0.378892,	6],
    ['2021년',	'전북',	'남성',	0.4345,	0.329927,	7],
    ['2021년',	'전북',	'여성',	0.3995,	0.432667,	6],
    ['2021년',	'제주',	'남성',	0.2684,	0.560546,	7],
    ['2021년',	'제주',	'여성',	0.1675,	0.751152,	6],
    ['2021년',	'충남',	'남성',	0.3648,	0.421055,	7],
    ['2021년',	'충남',	'여성',	0.2490,	0.634198,	6],
    ['2021년',	'충북',	'남성',	0.3869,	0.391247,	7],
    ['2021년',	'충북',	'여성',	0.4282,	0.396940,	6],
    ['2022년',	'강원',	'남성',	0.6055,	0.149647,	7],
    ['2022년',	'강원',	'여성',	0.5937,	0.159879,	7],
    ['2022년',	'경기',	'남성',	0.3733,	0.409517,	7],
    ['2022년',	'경기',	'여성',	0.4144,	0.355283,	7],
    ['2022년',	'경남',	'남성',	0.4855,	0.269367,	7],
    ['2022년',	'경남',	'여성',	0.5121,	0.240019,	7],
    ['2022년',	'경북',	'남성',	0.6356,	0.125002,	7],
    ['2022년',	'경북',	'여성',	0.5924,	0.161071,	7],
    ['2022년',	'광주',	'남성',	0.2281,	0.622815,	7],
    ['2022년',	'광주',	'여성',	0.2955,	0.519920,	7],
    ['2022년',	'대구',	'남성',	0.3988,	0.375529,	7],
    ['2022년',	'대구',	'여성',	0.5633,	0.187940,	7],
    ['2022년',	'대전',	'남성',	0.1944,	0.676186,	7],
    ['2022년',	'대전',	'여성',	0.3352,	0.462422,	7],
    ['2022년',	'부산',	'남성',	0.5513,	0.199582,	7],
    ['2022년',	'부산',	'여성',	0.8528,	0.014726,	7],
    ['2022년',	'서울',	'남성',	0.4107,	0.360040,	7],
    ['2022년',	'서울',	'여성',	0.5414,	0.209401,	7],
    ['2022년',	'세종',	'남성',	0.2062,	0.657325,	7],
    ['2022년',	'세종',	'여성',	0.2592,	0.574542,	7],
    ['2022년',	'울산',	'남성',	0.4205,	0.347548,	7],
    ['2022년',	'울산',	'여성',	0.4955,	0.258180,	7],
    ['2022년',	'인천',	'남성',	0.4641,	0.294199,	7],
    ['2022년',	'인천',	'여성',	0.5350,	0.215985,	7],
    ['2022년',	'전남',	'남성',	0.6236,	0.134528,	7],
    ['2022년',	'전남',	'여성',	0.4523,	0.308163,	7],
    ['2022년',	'전북',	'남성',	0.4786,	0.277238,	7],
    ['2022년',	'전북',	'여성',	0.4426,	0.319951,	7],
    ['2022년',	'제주',	'남성',	0.3049,	0.506128,	7],
    ['2022년',	'제주',	'여성',	0.3067,	0.503522,	7],
    ['2022년',	'충남',	'남성',	0.4074,	0.364298,	7],
    ['2022년',	'충남',	'여성',	0.3407,	0.454610,	7],
    ['2022년',	'충북',	'남성',	0.4315,	0.333700,	7],
    ['2022년',	'충북',	'여성',	0.4570,	0.302625,	7],
    ['2023년',	'강원',	'남성',	0.6165,	0.140406,	7],
    ['2023년',	'강원',	'여성',	0.5735,	0.178293,	7],
    ['2023년',	'경기',	'남성',	0.4024,	0.370794,	7],
    ['2023년',	'경기',	'여성',	0.4361,	0.327965,	7],
    ['2023년',	'경남',	'남성',	0.5076,	0.244842,	7],
    ['2023년',	'경남',	'여성',	0.5038,	0.249045,	7],
    ['2023년',	'경북',	'남성',	0.6358,	0.124805,	7],
    ['2023년',	'경북',	'여성',	0.5619,	0.189238,	7],
    ['2023년',	'광주',	'남성',	0.2428,	0.599865,	7],
    ['2023년',	'광주',	'여성',	0.2988,	0.515064,	7],
    ['2023년',	'대구',	'남성',	0.4399,	0.323293,	7],
    ['2023년',	'대구',	'여성',	0.5692,	0.182302,	7],
    ['2023년',	'대전',	'남성',	0.2118,	0.648413,	7],
    ['2023년',	'대전',	'여성',	0.3376,	0.459010,	7],
    ['2023년',	'부산',	'남성',	0.5690,	0.182499,	7],
    ['2023년',	'부산',	'여성',	0.8046,	0.029105,	7],
    ['2023년',	'서울',	'남성',	0.4826,	0.272676,	7],
    ['2023년',	'서울',	'여성',	0.5992,	0.155053,	7],
    ['2023년',	'세종',	'남성',	0.2285,	0.622203,	7],
    ['2023년',	'세종',	'여성',	0.2759,	0.549257,	7],
    ['2023년',	'울산',	'남성',	0.4400,	0.323165,	7],
    ['2023년',	'울산',	'여성',	0.4865,	0.268282,	7],
    ['2023년',	'인천',	'남성',	0.5077,	0.244737,	7],
    ['2023년',	'인천',	'여성',	0.5652,	0.186134,	7],
    ['2023년',	'전남',	'남성',	0.6393,	0.122158,	7],
    ['2023년',	'전남',	'여성',	0.4410,	0.321904,	7],
    ['2023년',	'전북',	'남성',	0.5008,	0.252252,	7],
    ['2023년',	'전북',	'여성',	0.4330,	0.331794,	7],
    ['2023년',	'제주',	'남성',	0.3341,	0.463982,	7],
    ['2023년',	'제주',	'여성',	0.3306,	0.468932,	7],
    ['2023년',	'충남',	'남성',	0.4455,	0.316461,	7],
    ['2023년',	'충남',	'여성',	0.3572,	0.431558,	7],
    ['2023년',	'충북',	'남성',	0.4555,	0.304387,	7],
    ['2023년',	'충북',	'여성',	0.4527,	0.307782,	7]
]
columns = ['연도', '지역', '성별', '상관계수 r', 'p-value', '샘플 수']
df = pd.DataFrame(data, columns=columns)

# ─────────────────────────────────────────────
# 🎛️ 필터 조건
st.markdown("""
<div style="background-color: #f9f9f9; padding: 20px; border-radius: 8px;">
    <h4>🔎 필터링 조건</h4>
    <p style="font-size: 15px;">연도, 지역, 성별을 선택해 상관계수를 확인하세요.</p>
</div>
""", unsafe_allow_html=True)

years = df['연도'].unique()
genders = df['성별'].unique()
regions = df['지역'].unique()

selected_years = st.multiselect("연도 선택", options=years, default=list(years))
selected_genders = st.multiselect("성별 선택", options=genders, default=list(genders))
selected_regions = st.multiselect("지역 선택", options=regions, default=list(regions))

# ─────────────────────────────────────────────
# 📋 필터링된 데이터
filtered_df = df[
    df['연도'].isin(selected_years) &
    df['성별'].isin(selected_genders) &
    df['지역'].isin(selected_regions)
].reset_index(drop=True)

st.markdown("<div style='height: 20px'></div>", unsafe_allow_html=True)
st.subheader("📋 필터링된 데이터")
st.dataframe(filtered_df, use_container_width=True)

st.markdown("<div style='height: 20px'></div>", unsafe_allow_html=True)
st.markdown("---")

# ─────────────────────────────────────────────
# 📈 시각화
st.subheader("📈 상관계수 시각화 (지역별)")

if not filtered_df.empty:
    st.bar_chart(filtered_df.set_index('지역')['상관계수 r'])
else:
    st.warning("선택한 조건에 맞는 데이터가 없습니다.")
